name: DÃ©ploiement sur aws apres update d'un fichier .tf

on:
  push:
    paths:
      - '**.tf'
  issues:
    types: [closed]

jobs:
  plan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.5.1

    - name: AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3

    - name: Terraform Init
      run: terraform init terraform

    - name: Terraform Validate
      run: terraform validate terraform

    - name: Terraform Plan
    id: plan
    run: |
      mkdir -p plans
      terraform plan -out=plans/myplan.out terraform
    continue-on-error: true

    - name: Create Issue for Validation
    if: ${{ success() }}
    uses: actions/github-script@v3
    with:
      github-token: ${{secrets.GITHUB_TOKEN}}
      script: |
        const fs = require('fs');
        const output = fs.readFileSync('./terraform/plans/myplan.out', 'utf8');
        const issue = {
          owner: context.repo.owner,
          repo: context.repo.repo,
          title: 'Terraform Plan Needs Validation',
          body: `Please validate the following Terraform execution plan:

          \`\`\`
          ${output}
          \`\`\`
          If everything looks correct, close this issue to apply the plan.`
        };
        github.issues.create(issue);

  apply:
    needs: plan
    if: github.event_name == 'issues' && github.event.issue.title == 'Terraform Plan Needs Validation'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1a

    - name: Terraform Init
      run: terraform init terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve terraform
