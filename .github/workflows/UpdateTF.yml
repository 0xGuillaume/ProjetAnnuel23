name: Deploy on AWS when a .tf file is updated

on:
  push:
    paths:
      - '**.tf'
  issues:
    types: [closed]

jobs:
  plan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.5.1

    - name: Set up AWS credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set region eu-west-1

    - name: Terraform Init
      run: terraform -chdir=terraform init

    - name: Terraform Validate
      run: terraform -chdir=terraform validate

    - name: Terraform Plan
      id: plan
      run: |
        terraform -chdir=terraform plan -out=myplan.out
      continue-on-error: true
      
    - name: Create Issue for Validation
      if: ${{ success() }}
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.ACCESS_TOKEN}}
        script: |
          const fs = require('fs');
          const output = fs.readFileSync('./terraform/myplan.out', 'utf8');
          const issue = {
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Terraform Plan Needs Validation',
            body: `Please validate the following Terraform execution plan:

            \`\`\`
            ${output}
            \`\`\`
            If everything looks correct, close this issue to apply the plan.`
          };
          github.issues.create(issue);

  apply:
    needs: plan
    if: github.event_name == 'issues' && github.event.issue.title == 'Terraform Plan Needs Validation'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.5.1

    - name: AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1a

    - name: Terraform Init
      run: terraform -chdir=terraform init

    - name: Terraform Apply
      run: terraform -chdir=terraform apply -auto-approve
